apiVersion: v1
kind: PersistentVolumeClaim
metadata:
   name: baget
spec:
   accessModes:
   - ReadWriteOnce
   resources:
     requests:
       storage: 10Gi
   storageClassName: longhorn  #ES
   volumeMode: Filesystem
   volumeName: ''              #必须为空
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
   labels:
     k8s-app: baget
     app: baget
   name: baget
spec:
   podManagementPolicy: OrderedReady
   replicas: 1
   revisionHistoryLimit: 10
   selector:
     matchLabels:
       k8s-app: baget
       app: baget
   serviceName: ""
   template:
     metadata:
       creationTimestamp: null
       labels:
         k8s-app: baget
         app: baget
     spec:
       containers:
       - env:
         - name: PATH
           value: /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
         - name: ASPNETCORE_URLS
           value: http://+:80
         - name: DOTNET_RUNNING_IN_CONTAINER
           value: "true"
         - name: ApiKey
           value: afe0f754-68b0-38a1-b7bf-44a34263465d
         - name: Storage__Type
           value: FileSystem
         - name: Storage__Path
           value: /var/baget/packages
         - name: Database__Type
           value: Sqlite
         - name: Database__ConnectionString
           value: Data Source=/var/baget/baget.db
         - name: Search__Type
           value: Database
         - name: AllowPackageOverwrites
           value: "true"
         image: loicsharma/baget:latest
         imagePullPolicy: IfNotPresent
         name: baget
         resources:
           limits:
             cpu: 500m
             memory: 1Gi
           requests:
             cpu: 250m
             memory: 256Mi
         securityContext:
           privileged: false
         terminationMessagePath: /dev/termination-log
         terminationMessagePolicy: File
         volumeMounts:
         - mountPath: /var/baget
           name: bagetpackage
       dnsPolicy: ClusterFirst
       imagePullSecrets:
       - name: qcloudregistrykey
       restartPolicy: Always
       schedulerName: default-scheduler
       securityContext: {}
       terminationGracePeriodSeconds: 30
       volumes:
       - name: bagetpackage
         persistentVolumeClaim:
           claimName: baget
   updateStrategy:
     rollingUpdate:
       partition: 0
     type: RollingUpdate
---
apiVersion: v1
kind: Service
metadata:
   name: baget
spec:
   ports:
   - name: 80-80-tcp
     port: 80
     protocol: TCP
     targetPort: 80
   selector:
     k8s-app: baget
     app: baget
   sessionAffinity: None
   type: ClusterIP
status:
   loadBalancer: {}
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: baget
spec:
  rules:
  - host: baget.cmhit.com
    http:
      paths:
      - backend:
          service:
            name: baget
            port:
              number: 80
        path: /
        pathType: Prefix
